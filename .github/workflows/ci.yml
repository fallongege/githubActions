name: Terraform deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  AWS_REGION : "us-east-1"
# permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT through OIDC
      contents: read    # This is required for actions/checkout
jobs:
  TerraformPlan:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::538672900635:role/Github-actions-role
          role-session-name: gha_oidc_assume_role
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Terraform Init
        id: init
        run: |
          terraform init

      - name: Terraform format
        id: fmt
        run: |
         terraform fmt -check

      - name: Terraform validate
        id: validate
        run: |
          terraform validate
        
      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
         terraform plan -no-color -input=false
        continue-on-error: true
        
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
         PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
         script: |
           const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
           #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
           #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
           #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
 
           <details><summary>Show Plan</summary>
 
           \`\`\`\n
           ${process.env.PLAN}
           \`\`\`
 
           </details>
           *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
 
           github.rest.issues.createComment({
             issue_number: context.issue.number,
             owner: context.repo.owner,
             repo: context.repo.repo,
             body: output
           })
 
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: |
         exit 1
 
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
         terraform apply -auto-approve -input=false
